ARG DOCKER_BASE
FROM $DOCKER_BASE

# Set non-interactive mode
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A4B469963BF863CC
RUN apt-get update && apt-get --no-install-recommends install -yq git cmake build-essential \
    libgl1-mesa-dev libsdl2-dev \
    libsdl2-image-dev libsdl2-ttf-dev libsdl2-gfx-dev libboost-all-dev \
    libdirectfb-dev libst-dev mesa-utils xvfb x11vnc \
    python3-pip

# Install AWS CLI v2
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
    unzip awscliv2.zip && \
    ./aws/install && \
    rm -rf aws awscliv2.zip

# Install Python packages and TensorFlow 1.15
RUN python3 -m pip install --upgrade pip setuptools wheel
RUN python3 -m pip install --no-cache-dir psutil dm-sonnet==1.*
RUN python3 -m pip list | grep 'tensorflow ' || python3 -m pip install --no-cache-dir tensorflow==1.15.*

# Install OpenAI baselines and Google Research Football
RUN python3 -m pip install --no-cache-dir git+https://github.com/openai/baselines.git@master
COPY . /gfootball
RUN cd /gfootball && python3 -m pip install .

# Set up SageMaker working directory and environment variables
RUN mkdir -p /opt/ml/code
WORKDIR /opt/ml/code
ENV SAGEMAKER_SUBMIT_DIRECTORY /opt/ml/code

# Copy the entrypoint script into the container
COPY entrypoint.sh /opt/ml/code/entrypoint.sh

# Make it executable
RUN chmod +x /opt/ml/code/entrypoint.sh

# Set the entrypoint to the script
ENTRYPOINT ["/opt/ml/code/entrypoint.sh"]
